---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline-sa
  namespace: java-maven-demo
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: pipeline-psp
spec:
  privileged: true  # Don't allow privileged pods!
  # The rest fills in some required fields.
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: psp:pipeline-role
rules:
- apiGroups:
  - policy
  resourceNames:
  - pipeline-psp
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pipeline-sa:psp:privileged
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: psp:pipeline-role
subjects:
- kind: ServiceAccount
  name: pipeline-sa
  namespace: java-maven-demo
---
apiVersion: v1
data:
  default-service-account: pipeline-sa
kind: ConfigMap
metadata:
  name: config-defaults
  namespace: java-maven-demo
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"default-service-account":"pipeline-sa"},"kind":"ConfigMap","metadata":{"annotations":{},"creationTimestamp":null,"name":"config-defaults","namespace":"tekton-pipelines"}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pipeline
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: pipeline-sa
  namespace: java-maven-demo

---
apiVersion: v1
kind: Namespace
metadata:
  name: java-maven-demo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pipeline
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: pipeline-sa
  namespace: java-maven-demo